name: Triger E2E Tests on Push
on:
  push:
    branches:
      - main
jobs:
  build-and-run:
    name: Build and Run E2E test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        TARGET_ENV: [demo, dev.lite]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"
      - uses: zcong1993/setup-timezone@v1.1.2
        with:
          timezone: "Asia/Kolkata"
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgbm-dev
          sudo apt-get install -y xvfb
          sudo apt-get -y install xorg xvfb gtk2-engines-pixbuf
          sudo apt-get -y install dbus-x11 xfonts-base xfonts-100dpi xfonts-75dpi xfonts-cyrillic xfonts-scalable
          sudo apt-get -y install imagemagick x11-apps
          sudo apt-get update
          sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget ffmpeg
      - run: npm install @getgauge/cli
      - run: npm install
      - name: Run Tests in Demo
        if: ${{matrix.TARGET_ENV == 'demo'}}
        run: |
          xvfb-run npm run ci -- --env "${{matrix.TARGET_ENV}}" --tags setup
          xvfb-run npm run ci -- --env "${{matrix.TARGET_ENV}}" --tags hospital
      - name: Run Tests in Dev.lite
        if: ${{matrix.TARGET_ENV == 'dev.lite'}}
        run: xvfb-run npm run ci -- --env "${{matrix.TARGET_ENV}}" --tags clinic
      - name: Upload HTML reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: HTML_Reports_${{ GITHUB.RUN_NUMBER }}_${{matrix.TARGET_ENV}}
          path: ./reports/html-report
      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Logs_${{ GITHUB.RUN_NUMBER }}_${{matrix.TARGET_ENV}}
          path: ./logs/gauge.log
      - name: Upload Video
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Videos_${{ GITHUB.RUN_NUMBER }}_${{matrix.TARGET_ENV}}
          path: ./reports/video
